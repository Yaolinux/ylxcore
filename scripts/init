#!/bin/bash

source config

exist_partitions() {
	CHECK_MAIN_PART=$(lsblk -l -p -o NAME | grep $MAIN_PART)
	CHECK_SWAP_PART=$(lsblk -l -p -o NAME | grep $SWAP_PART)
	CHECK_PART="false"

	if [ ! -z $CHECK_MAIN_PART ] && [ ! -z $CHECK_SWAP_PART ]
	then
		CHECK_PART="true"
	else
		echo -e "Please check your config : \n SWAP_PART or/and MAIN_PART"
		exit 10
	fi
}

format_partitions() {
	if [ $CHECK_PART == "true" ]
	then
		mkfs.ext4 -F $MAIN_PART
		mkswap -f $SWAP_PART
	fi
}

erase_old_init() {
	CHECK_EXIST_LFS_USER=$(cat /etc/passwd | grep lfs)
	CHECK_MOUNT_LFS=$(mount | grep $MOUNT_POINT)

	if [ ! -z $CHECK_EXIST_LFS_USER ]
	then
		if [ ! -z $CHECK_MOUNT_LFS ]
		then
			umount $MOUNT_POINT
		fi

		userdel -f lfs
		rm -r /home/lfs
		rm -r $MOUNT_POINT
		groupdel lfs
	fi
}

export_and_mount() {

	export LFS="$MOUNT_POINT"
	mkdir -pv $LFS
	mount $MAIN_PART $LFS
	ln -svf /bin/bash /bin/sh
}

create_directories() {
	mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin}

	for i in bin lib sbin; do
	  ln -sv usr/$i $LFS/$i
	done

	case $(uname -m) in
	  x86_64) mkdir -pv $LFS/lib64 ;;
	esac

	mkdir -pv $LFS/tools
}

create_lfs_user() {
	groupadd lfs
	useradd -s /bin/bash -g lfs -m -k /dev/null lfs
	echo 'lfs:lfs' | chpasswd
	chown -v lfs $LFS/{usr{,/*},lib,var,etc,bin,sbin,tools}
	case $(uname -m) in
	  x86_64) chown -v lfs $LFS/lib64 ;;
	esac

	chown -v lfs $LFS/sources

}


init_toolschain() {

	if [ -z "$MAIN_PART" -o -z "$SWAP_PART" ]
	then
		echo -e "Please complete config file : \n SWAP_PART or/and MAIN_PART"
	fi

	echo -e "Please check config : \n MOUNT POINT : $MOUNT_POINT \n SWAP PARTITION : $SWAP_PART \n MAIN PARTITION : $MAIN_PART"
	echo -e "WARNING : this script erase all data of partition"


	read -p "Are you agree with config and erase data (y/n) : " USER_CHECKCONFIG

	case $USER_CHECKCONFIG in
		y|Y)
			erase_old_init
			exist_partitions
			format_partitions
			export_and_mount
			create_directories
			create_lfs_user
		;;
		*)

			echo "Nada !"
		;;
	esac
}

init_chroot_chown() {
	chown -R root:root $LFS/{usr,lib,var,etc,bin,sbin,tools}
	case $(uname -m) in
	  x86_64) chown -R root:root $LFS/lib64 ;;
	esac
}

init_chroot_mkdir() {
	mkdir -pv $LFS/{dev,proc,sys,run}
}

init_chroot_node() {
	mknod -m 600 $LFS/dev/console c 5 1
	mknod -m 666 $LFS/dev/null c 1 3
}

init_chroot_link() {
	mount -v --bind /dev $LFS/dev
	mount -v --bind /dev/pts $LFS/dev/pts
	mount -vt proc proc $LFS/proc
	mount -vt sysfs sysfs $LFS/sys
	mount -vt tmpfs tmpfs $LFS/run

	if [ -h $LFS/dev/shm ]; then
	  mkdir -pv $LFS/$(readlink $LFS/dev/shm)
	fi
}

[ -z "$MOUNT_POINT" ] && MOUNT_POINT="/mnt/lfs"

case $1 in
	"tools")
		echo "Init tools"
		init_toolschain
		;;
	"chroot")
		echo "Init chroot"
		;;
	*)
		echo "Do nothing"
		;;
esac
