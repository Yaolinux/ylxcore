#!/bin/bash

source config

exist_partitions() {
	CHECK_MAIN_PART=$(lsblk -l -p -o NAME | grep $MAIN_PART)
	CHECK_SWAP_PART=$(lsblk -l -p -o NAME | grep $SWAP_PART)
	CHECK_PART="false"

	if [ ! -z $CHECK_MAIN_PART ] && [ ! -z $CHECK_SWAP_PART ]
	then
		CHECK_PART="true"
	else
		echo -e "Please check your config : \n SWAP_PART or/and MAIN_PART"
		exit 10
	fi
}

format_partitions() {
	if [ $CHECK_PART == "true" ]
	then
		mkfs.ext4 -F $MAIN_PART
		mkswap -f $SWAP_PART
	fi
}

erase_old_init() {
	CHECK_EXIST_LFS_USER=$(cat /etc/passwd | grep lfs)
	CHECK_MOUNT_LFS=$(mount | grep $MOUNT_POINT)

	if [ ! -z $CHECK_EXIST_LFS_USER ]
	then
		if [ ! -z $CHECK_MOUNT_LFS ]
		then
			umount $MOUNT_POINT
		fi

		userdel -f lfs
		rm -r /home/lfs
		rm -r $MOUNT_POINT
		groupdel lfs
	fi
}

export_and_mount() {

	export LFS="$MOUNT_POINT"
	mkdir -pv $LFS
	mount $MAIN_PART $LFS
	ln -svf /bin/bash /bin/sh
}

create_directories() {
	mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin}

	for i in bin lib sbin; do
	  ln -sv usr/$i $LFS/$i
	done

	case $(uname -m) in
	  x86_64) mkdir -pv $LFS/lib64 ;;
	esac

	mkdir -pv $LFS/tools
}

create_lfs_user() {
	groupadd lfs
	useradd -s /bin/bash -g lfs -m -k /dev/null lfs
	echo 'lfs:lfs' | chpasswd
	chown -v lfs $LFS/{usr{,/*},lib,var,etc,bin,sbin,tools}
	case $(uname -m) in
	  x86_64) chown -v lfs $LFS/lib64 ;;
	esac

	chown -v lfs $LFS/sources

}


init_toolschain() {

	if [ -z "$MAIN_PART" -o -z "$SWAP_PART" ]
	then
		echo -e "Please complete config file : \n SWAP_PART or/and MAIN_PART"
	fi

	echo -e "Please check config : \n MOUNT POINT : $MOUNT_POINT \n SWAP PARTITION : $SWAP_PART \n MAIN PARTITION : $MAIN_PART"
	echo -e "WARNING : this script erase all data of partition"


	read -p "Are you agree with config and erase data (y/n) : " USER_CHECKCONFIG

	case $USER_CHECKCONFIG in
		y|Y)
			erase_old_init
			exist_partitions
			format_partitions
			export_and_mount
			create_directories
			create_lfs_user
		;;
		*)

			echo "Nada !"
		;;
	esac
}

init_chroot_chown() {
	chown -R root:root $LFS/{usr,lib,var,etc,bin,sbin,tools}
	case $(uname -m) in
	  x86_64) chown -R root:root $LFS/lib64 ;;
	esac
}

init_chroot_mkdir() {
	mkdir -pv $LFS/{dev,proc,sys,run}
}

init_chroot_node() {
	mknod -m 600 $LFS/dev/console c 5 1
	mknod -m 666 $LFS/dev/null c 1 3
}

init_chroot_link() {
	mount -v --bind /dev $LFS/dev
	mount -v --bind /dev/pts $LFS/dev/pts
	mount -vt proc proc $LFS/proc
	mount -vt sysfs sysfs $LFS/sys
	mount -vt tmpfs tmpfs $LFS/run

	if [ -h $LFS/dev/shm ]; then
	  mkdir -pv $LFS/$(readlink $LFS/dev/shm)
	fi
}

init_postchroot_mkdir() {
	mkdir -pv /{boot,home,mnt,opt,srv}
	mkdir -pv /etc/{opt,sysconfig}
	mkdir -pv /lib/firmware
	mkdir -pv /media/{floppy,cdrom}
	mkdir -pv /usr/{,local/}{include,src}
	mkdir -pv /usr/local/{bin,lib,sbin}
	mkdir -pv /usr/{,local/}share/{color,dict,doc,info,locale,man}
	mkdir -pv /usr/{,local/}share/{misc,terminfo,zoneinfo}
	mkdir -pv /usr/{,local/}share/man/man{1..8}
	mkdir -pv /var/{cache,local,log,mail,opt,spool}
	mkdir -pv /var/lib/{color,misc,locate}

	ln -sfv /run /var/run
	ln -sfv /run/lock /var/lock

	install -dv -m 0750 /root
	install -dv -m 1777 /tmp /var/tmp

	ln -sv /proc/self/mounts /etc/mtab
}

init_postchroot_hosts() {
cat > /etc/hosts << "EOF"
	127.0.0.1  localhost $(hostname)
	::1        localhost
EOF
}

init_postchroot_passwd() {
cat > /etc/passwd << "EOF"
	root:x:0:0:root:/root:/bin/bash
	bin:x:1:1:bin:/dev/null:/usr/bin/false
	daemon:x:6:6:Daemon User:/dev/null:/usr/bin/false
	messagebus:x:18:18:D-Bus Message Daemon User:/run/dbus:/usr/bin/false
	systemd-journal-gateway:x:73:73:systemd Journal Gateway:/:/usr/bin/false
	systemd-journal-remote:x:74:74:systemd Journal Remote:/:/usr/bin/false
	systemd-journal-upload:x:75:75:systemd Journal Upload:/:/usr/bin/false
	systemd-network:x:76:76:systemd Network Management:/:/usr/bin/false
	systemd-resolve:x:77:77:systemd Resolver:/:/usr/bin/false
	systemd-timesync:x:78:78:systemd Time Synchronization:/:/usr/bin/false
	systemd-coredump:x:79:79:systemd Core Dumper:/:/usr/bin/false
	uuidd:x:80:80:UUID Generation Daemon User:/dev/null:/usr/bin/false
	systemd-oom:x:81:81:systemd Out Of Memory Daemon:/:/usr/bin/false
	nobody:x:99:99:Unprivileged User:/dev/null:/usr/bin/false
EOF
}

init_postchroot_groups() {
cat > /etc/group << "EOF"
	root:x:0:
	bin:x:1:daemon
	sys:x:2:
	kmem:x:3:
	tape:x:4:
	tty:x:5:
	daemon:x:6:
	floppy:x:7:
	disk:x:8:
	lp:x:9:
	dialout:x:10:
	audio:x:11:
	video:x:12:
	utmp:x:13:
	usb:x:14:
	cdrom:x:15:
	adm:x:16:
	messagebus:x:18:
	systemd-journal:x:23:
	input:x:24:
	mail:x:34:
	kvm:x:61:
	systemd-journal-gateway:x:73:
	systemd-journal-remote:x:74:
	systemd-journal-upload:x:75:
	systemd-network:x:76:
	systemd-resolve:x:77:
	systemd-timesync:x:78:
	systemd-coredump:x:79:
	uuidd:x:80:
	systemd-oom:x:81:
	wheel:x:97:
	nogroup:x:99:
	users:x:999:
EOF
}

init_postchroot_adduser() {
	echo "tester:x:101:101::/home/tester:/bin/bash" >> /etc/passwd
	echo "tester:x:101:" >> /etc/group
	install -o tester -d /home/tester
}

init_postchroot_applyconfig() {
	exec /usr/bin/bash --login
	touch /var/log/{btmp,lastlog,faillog,wtmp}
	chgrp -v utmp /var/log/lastlog
	chmod -v 664  /var/log/lastlog
	chmod -v 600  /var/log/btmp
}

init_chroot() {
	init_chroot_chown
	init_chroot_mkdir
	init_chroot_node
	init_chroot_link
}

init_postchroot() {
	init_postchroot_mkdir
	init_postchroot_hosts
	init_postchroot_passwd
	init_postchroot_groups
	init_postchroot_adduser
	init_postchroot_applyconfig
}

help() {
	echo "Init script for build Yaolinux"
	echo "Usage : bash init [OPTIONS]"
	echo "Options :"
	echo "tools : Init the default folders for compile toolschain"
	echo "chroot : Init the folders ans files before enter in chroot"
	echo "postchroot : Init the folders ans files after enter in chroot"
}

[ -z "$MOUNT_POINT" ] && MOUNT_POINT="/mnt/lfs"

case $1 in
	"tools")
		echo "Init tools"
		init_toolschain
		;;
	"chroot")
		echo "Init chroot"
		init_chroot
		;;
	"postchroot")
		echo "Init postchroot"
		init_postchroot
		;;
	*)
		help
		;;
esac
